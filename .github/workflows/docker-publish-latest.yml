name: Docker Publish Latest

on:
  workflow_dispatch:
    inputs:
      candidate:
        description: Version candidate to be latest
        required: true
        type: string
      tagged:
        description: The docker image will be tagged with the version number as well if this value is true
        required: false
        type: boolean
        default: false

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  REPO_NAME: ${{ github.repository }}

jobs:
  buildAndPush:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the image name
        id: get_name
        run: echo ::set-output name=IMAGE_NAME::${REPO_NAME/docker-}

      - name: Build tagged Docker image
        if: ${{ github.event.inputs.tagged }}
        run: docker build --build-arg VERSION=${{ github.event.inputs.candidate }} --build-arg BUILD_DATE="$(date +%Y/%m/%dT%H:%M:%S)" --file Dockerfile --tag ${{ steps.get_name.outputs.IMAGE_NAME }}:${{ github.event.inputs.candidate }} .
      
      - name: Build latest Docker image
        run: docker build --build-arg VERSION=${{ github.event.inputs.candidate }} --build-arg BUILD_DATE="$(date +%Y/%m/%dT%H:%M:%S)" --file Dockerfile --tag ${{ steps.get_name.outputs.IMAGE_NAME }}:latest .
      
      # Login against a Docker registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Push tagged Docker image
        if: ${{ github.event.inputs.tagged }}
        run: docker push ${{ steps.get_name.outputs.IMAGE_NAME }}:${{ github.event.inputs.candidate }}
      
      - name: Push latest Docker image
        run: docker push ${{ steps.get_name.outputs.IMAGE_NAME }}:latest

